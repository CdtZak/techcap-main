<!DOCTYPE html>
<html lang="en">
    <head>
       
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="style.css">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
        <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Electrolize&family=Orbitron&display=swap" rel="stylesheet">
       
    </head>
    <header style="color: white;">
        <h1>Bridge under captain command !</h1>
    </header>
<body  style="color: white; background-repeat: repeat;">
    
    <h2>PRODUCTS</h2>
    <div class="products">
        
        
        <% products.forEach(product => { %>
            <div class="single-product">
            <p><%= product.name %></p>
            <p>Specs:<%= product.specs %></p>
            <p >Product Id:<%= product._id %></p>
            <p>Price:<%= product.price %></p>
            <button class="delete-button" data-product-id=<%= product._id %>  >delete </button>
        </div>
        <% }); %>
  
    </div>
        <form>
            <label for="name">name:</label><br>
            <input type="text" ><br>
        
            <label for="cpu">CPU:</label><br>
            <input type="text" ><br>
        
            <label for="name">name:</label><br>
    <input type="text" id="name"><br>

    <label for="cpu">CPU:</label><br>
    <input type="text" id="cpu"><br>

    <label for="gpu">GPU:</label><br>
    <input type="text" id="gpu"><br>

    <label for="screen">screen:</label><br>
    <input type="text" id="screen"><br>

    <label for="ram">ram:</label><br>
    <input type="text" id="ram"><br>

    <label for="storage">storage:</label><br>
    <input type="text" id="storage"><br>

    <label for="ref">ref:</label><br>
    <input type="text" id="ref"><br>

    <label for="images">images:</label><br>
    <input type="text" id="images"><br>

    <label for="state">state:</label><br>
    <input type="text" id="state"><br>

    <label for="price">price:</label><br>
    <input type="text" id="price"><br>
          </form>
        <br>
    
    <button id="add-btn">Add a new product</button>
    <h2>ORDERS</h2>
    <div class="order-section">
     
        <p>Order number</p>
        <p>Name</p>
        <p>Phone</p>
        <p>Wiliya</p>
        <p>Product Id</p>
        
        <p>status</p>
        <p>Order at</p>
        <p>update</p>
        <p>delete</p>
        <% orders.forEach((order,i) => { %>
            <p>order N<%= i+1 %> </p>
            <p> <%= order.fullname %></p>
            <p><%=order.number %></p>
            <p><%=order.wiliya %></p>
            <p><%=order.productId %></p>
            
            <select class="state" id=<%=order._id%>>
                <option value= <%= order.status %>><%= order.status %></option>
                <option value="Confirmed">Confirmed</option>
                <option value="Delivered">Delivered</option>
                <option value="Unconfirmed">Unconfirmed</option>
                
              </select>
              <p><%=order.createdAt %></p>
              
              <button name="updateState"    data-order-id=<%= order._id %> >Update </button>
            <button name="deleteOrder" data-order-id=<%= order._id %> >Delete order</button>
           
        <% }); %>

    </div>
    
    <script>
        //ADD CLASS TO BTN 
        // Select all buttons using document.querySelectorAll()
const buttons = document.querySelectorAll('button');

// Loop through each button and add the class
buttons.forEach(button => {
    button.classList.add('purchase');
});
        //ADD PC 
        document.addEventListener('DOMContentLoaded', function() {
    
    let addButton = document.querySelector('#add-btn');

    
    addButton.addEventListener('click', function() {
    
        let name = document.querySelector('#name').value;
        let cpu = document.querySelector('#cpu').value;
        let gpu = document.querySelector('#gpu').value;
        let screen = document.querySelector('#screen').value;
        let ram = document.querySelector('#ram').value;
        let storage = document.querySelector('#storage').value;
        let ref = document.querySelector('#ref').value;
        let images = document.querySelector('#images').value;
        let state = document.querySelector('#state').value;
        let price = document.querySelector('#price').value;

        
        let data = {
            name: name,
            price: 16,
            images: images.split(','), 
            specs: {
                cpu: cpu,
                gpu: gpu,
                screen: screen,
                ref: ref,
                state: state
            }
        };

        
        fetch('https://techcap-main.onrender.com/addpc', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            if (response.ok) {
                console.log('Product added successfully');
                setTimeout(() => {
            location.reload();
        }, 1000); 
                
                console.error('Failed to add product');
                
            }
        })
        .catch(error => {
            console.error('Error occurred while adding product:', error);
           
        });
    });
});
        //DELETE PC 
        document.querySelectorAll('.delete-button').forEach(button => {
        button.addEventListener('click', function() {
            
            const productId = this.getAttribute('data-product-id');
            console.log('Deleting product with ID:', productId);

            
            fetch('http://127.0.0.1:3000/deleteProduct', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => {
                if (response.ok) {
                    console.log('Product deleted successfully');
                    setTimeout(() => {
            location.reload();
        }, 1000); 
                   
                } else {
                    console.error('Failed to delete product');
                    
                }
            })
            .catch(error => {
                console.error('Error occurred while deleting product:', error);
                
            });
        });
    });
    //UPDATE ORDER STATUS
    document.addEventListener('DOMContentLoaded', function() {
    const updateButtons = document.querySelectorAll('button[name="updateState"]');
   
    
    updateButtons.forEach(button => {
        button.addEventListener('click', async function(event) {
            const orderId = button.dataset.orderId;
            let states = []
            let ids = []
            const selectors = document.querySelectorAll('.state')
            selectors.forEach(ele =>{
                states.push(ele.value)
            })
            updateButtons.forEach(btn =>{
                ids.push(btn.dataset.orderId)
            })
            const mergedArray = [];


for (let i = 0; i < ids.length; i++) {   
    const obj = {
        id: ids[i],
        state: states[i]
    };
    mergedArray.push(obj);
}
function getStateById(id) {
    for (let i = 0; i < mergedArray.length; i++) {
        if (mergedArray[i].id === id) {
            return mergedArray[i].state;
        }
    }
    return null;
}

const idToFind = '6612a02c66f4ea12b730b7dd';
const newState = getStateById(orderId);


            console.log(orderId, newState);
            

            try {
                const response = await fetch('http://127.0.0.1:3000/updateOrder', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        state: newState
                    })
                });

                const data = await response.json();
                console.log(data); 

            } catch (error) {
                console.error('Error updating order:', error);
            }
        });
    });
});
//DELETE ORDER 
document.addEventListener('DOMContentLoaded', function() {
    const deleteButtons = document.querySelectorAll('button[data-order-id][name="deleteOrder"]');

    deleteButtons.forEach(button => {
        button.addEventListener('click', async function(event) {
            const orderId = button.dataset.orderId;

            try {
                const response = await fetch(`http://127.0.0.1:3000/deleteOrder`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        
                    })
                });

                if (response.ok) {
                    console.log('Order deleted successfully');
                    
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    console.error('Failed to delete order');
                }

            } catch (error) {
                console.error('Error deleting order:', error);
            }
        });
    });
});

    </script>
</body>
</html>
